<?php

namespace Tests\Feature;

use App\Models\Tenant;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Str;
use Stancl\Tenancy\Middleware\InitializeTenancyByDomain;
use Tests\TestCase;

class UserTest extends TestCase
{
    //protected $tenancy = false;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('migrate:fresh --env=testing');
        $this->artisan('passport:client --personal --name=revo');
    }

    public function testGetTenantUser(){
        $user = mockUser();

        $tenant = Tenant::create([
            'name' => 'tenant_name_'.random_int(100000, 999999)
        ]);

        tenancy()->initialize($tenant);

        $domain = $tenant->domains()->create(['domain' => $tenant->slug .'.'.env('DOMAIN')]);

        $this->withHeaders(
                [
                    'Accept'=>'application/json',
                    'Authorization' => 'Bearer '.$user->access->accessToken
                ])
            ->json('get', 'http://'.$domain->name.'/v1/company/products')
            ->assertStatus(200);

    }
}
